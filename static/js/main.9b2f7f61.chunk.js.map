{"version":3,"sources":["images/wkLogoTransparent.png","images/wkLogo.jpg","components/HeaderComponent.js","components/HomeComponent.js","components/DashboardComponent.js","components/ContactComponent.js","components/FooterComponent.js","shared/baseURL.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/configureStore.js","redux/users.js","redux/dashboard.js","redux/warranties.js","redux/forms.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","required","val","length","HomeHeader","props","useState","navIsOpen","setNavIsOpen","modalIsOpen","setModalIsOpen","toggleModal","UserButton","signedIn","Nav","className","navbar","NavItem","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","name","DropdownMenu","right","DropdownItem","onClick","signout","window","localStorage","clear","showFail","setShowFail","toggleSetShowFail","showSuccess","setShowSuccess","toggleSetShowSuccess","href","dashboard","signedOut","Navbar","dark","expand","NavbarBrand","src","logo","alt","height","width","NavbarToggler","Collapse","isOpen","to","Modal","toggle","ModalHeader","ModalBody","onSubmit","values","password","oldPassword","changePassword","id","email","newPassword","handleChangePassword","Row","Col","xs","Toast","style","backgroundColor","ToastHeader","Label","htmlFor","md","text","type","model","placeholder","validators","show","messages","Button","color","confirm","userWarranties","warranties","filter","warranty","userId","i","deleteWarranty","deleteAccount","toggleDeleteAccount","formValues","clickOnSignIn","toastVisible","validEmail","test","Home","setShow","makeToastVisibleFalse","users","isLoading","console","log","validUser","user","valuesWithId","signin","history","push","fetchWarranties","loading","Card","CardImg","top","CardBody","CardTitle","fetchUsers","handleSignIn","block","CardText","signup","handleSignUp","maxLength","len","minLength","isNumber","isNaN","Number","validDate","BlankCard","Fade","WarrantyDetail","invoiceDateParts","invoiceDate","split","invoiceDateObject","Date","Intl","DateTimeFormat","year","month","day","format","warrantyPeriodObject","setMonth","getMonth","parseInt","warrantyPeriod","warrantyUpto","CardHeader","Table","responsive","scope","invoiceNum","seller","warrantyNum","comments","CardFooter","outline","Dashboard","showDetail","setShowDetail","addWarrantyInfo","setAddWarranty","toggleAddWarrantyToFalse","warrantyList","map","ListGroupItem","key","tag","action","toggleShowDetail","errMess","ListGroup","AddWarranty","addWarranty","valuesWithUserId","handleAddWarranty","textarea","rows","form","Contact","handleSubmit","bind","this","resetFeedbackForm","postFeedback","fontSize","target","rel","borderLeft","size","offset","check","checkbox","Component","Footer","baseURL","usersLoading","loadUsers","payload","usersFailed","dispatch","warrantiesLoading","fetch","then","response","ok","error","Error","status","statusText","message","json","loadWarranties","catch","warrantiesFailed","alert","Main","stateLoaded","location","exact","path","component","withRouter","connect","state","userDetails","newUser","method","body","JSON","stringify","headers","credentials","newWarranty","warrantyId","actions","reset","feedback","newFeedback","date","toISOString","reducer","storage","combineReducers","concat","LOAD","createForms","telnum","agree","engine","createEngine","middleware","store","applyMiddleware","thunk","createStore","createStoreWithMiddleware","load","newState","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9b2f7f61.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wkLogoTransparent.40ebc212.png\";","module.exports = __webpack_public_path__ + \"static/media/wkLogo.11d3915c.jpg\";","// DESIGNED AND DEVELOPED BY EKAGRA MIDHA (https://github.com/ekagra25)\n\nimport React, { useState } from 'react';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem,\n    UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem,\n    Modal, ModalBody, ModalHeader, Row, Col, Button, Label,\n    Toast, ToastHeader } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport logo from '../images/wkLogoTransparent.png';\n\nconst required = (val) => val && val.length;\n\nfunction HomeHeader (props) {\n    const [navIsOpen, setNavIsOpen] = useState(false);\n    const toggleNav = () => setNavIsOpen(!navIsOpen);\n\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const toggleModal = () => setModalIsOpen(!modalIsOpen);\n\n    function UserButton (signedIn) {\n        if (signedIn.signedIn !== null) {\n            return (\n                <Nav className=\"ml-auto\" navbar>\n                    <NavItem>\n                        <UncontrolledDropdown nav inNavbar className=\"ml-auto\">\n                            <DropdownToggle nav caret>\n                            <span className=\"fa fa-user-circle-o\" /> {signedIn.signedIn.name}\n                            </DropdownToggle>\n                            <DropdownMenu right>\n                                <DropdownItem onClick={toggleModal}>\n                                    <span className=\"fa fa-cog\" /> Profile Settings\n                                </DropdownItem>\n                                <DropdownItem onClick={() => {props.signout(); window.localStorage.clear()}}>\n                                    <span className=\"fa fa-sign-out\" /> Sign Out\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </UncontrolledDropdown>\n                    </NavItem>\n                </Nav>  \n            );\n        }\n        else {\n            return (\n                <></>\n            );\n        }\n    }\n\n    const [showFail, setShowFail] = useState(false);\n    const toggleSetShowFail = () => setShowFail(!showFail);\n\n    const [showSuccess, setShowSuccess] = useState(false);\n    const toggleSetShowSuccess = () => setShowSuccess(!showSuccess);\n\n    const handleChangePassword = (values) => {\n        if (props.dashboard.signedIn.password === values.oldPassword) {\n            props.changePassword (props.dashboard.signedIn.id, props.dashboard.signedIn.name, props.dashboard.signedIn.email, values.newPassword);\n            toggleSetShowSuccess();\n        }\n        else {\n            toggleSetShowFail();\n        }\n    }\n\n    const toggleDeleteAccount = () => {\n        var sure = window.confirm(\"Are you sure you want to delete you account? All your saved information will be permanently deleted.\");\n        if (sure) {\n            const userWarranties = props.warranties.warranties.filter ((warranty) => warranty.userId === props.dashboard.signedIn.id);\n            for (var i = 0; i < userWarranties.length; i++) {\n                props.deleteWarranty (userWarranties[i].id);\n            }\n            props.deleteAccount (props.dashboard.signedIn.id);\n            props.signout();\n            toggleModal();\n        }\n    }\n\n    const href = (props.dashboard.signedOut) ? '/wk/home' : '/wk/dashboard';\n\n    return (\n        <>\n            <header>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                    <NavbarBrand href={href} className=\"mr-auto\">\n                        <img src={logo} alt=\"Logo\" height=\"25px\" width=\"auto\" />\n                    </NavbarBrand>\n                    <NavbarToggler onClick={toggleNav} />\n                        <Collapse isOpen={navIsOpen} navbar>\n                            <Nav className=\"mr-auto\" navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/wk/home\">\n                                        <span className=\"fa fa-home\"> Home</span>\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/wk/contact\">\n                                        <span className=\"fa fa-address-card\"> Contact Us</span>\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                            <UserButton signedIn={props.dashboard.signedIn} />\n                        </Collapse>\n                    </div>\n                </Navbar>\n            </header>\n\n            <Modal isOpen={modalIsOpen} toggle={toggleModal}>\n                <ModalHeader toggle={toggleModal}>Profile Settings</ModalHeader>\n                <ModalBody>\n                    <h6>Change Password</h6>\n                    <LocalForm onSubmit={(values) => handleChangePassword (values)} >\n                        <Row className=\"form-group\">\n                            <Col xs={12}>\n                                <Toast isOpen={showFail} style={{backgroundColor: \"#ff0000\"}}>\n                                    <ToastHeader toggle={() => toggleSetShowFail()}>\n                                        <span className=\"fa fa-exclamation-triangle\" /> Incorrect old password.\n                                    </ToastHeader>\n                                </Toast>\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Col xs={12}>\n                                <Toast isOpen={showSuccess} style={{backgroundColor: \"#00ff00\"}}>\n                                    <ToastHeader toggle={() => { toggleSetShowSuccess(); toggleModal() }}>\n                                        <span className=\"fa fa-check-circle\" /> Password changed successfully.\n                                    </ToastHeader>\n                                </Toast>\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"oldPassword\" md={4}>Old Password</Label>\n                            <Col md={8}>\n                                <Control.text type=\"password\" model=\".oldPassword\" id=\"oldPassword\" name=\"oldPassword\"\n                                    placeholder=\"Old Password\" className=\"form-control\"\n                                    validators={{ required }}\n                                />\n                                <Errors className=\"fa fa-exclamation-circle text-danger\" model=\".oldPassword\" show=\"touched\"\n                                    messages={{ required: ' Required.' }}\n                                />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"newPassword\" md={4}>New Password</Label>\n                            <Col md={8}>\n                                <Control.text type=\"password\" model=\".newPassword\" id=\"newPassword\" name=\"newPassword\"\n                                    placeholder=\"New Password\" className=\"form-control\"\n                                    validators={{ required }}\n                                />\n                                <Errors className=\"fa fa-exclamation-circle text-danger\" model=\".newPassword\" show=\"touched\"\n                                    messages={{ required: ' Required.' }}\n                                />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Col xs={12}>\n                                <Button type=\"submit\" color=\"primary\">\n                                    <span className=\"fa fa-key\" /> Change Password\n                                </Button>\n                            </Col>\n                        </Row>\n                    </LocalForm>\n                    <hr />\n                    <h6>Delete Account</h6>\n                    <Row>\n                        <Col xs={12}>\n                            <Button color=\"danger\" onClick={() => toggleDeleteAccount()}><span className=\"fa fa-ban\" /> Delete Account</Button>\n                        </Col>\n                    </Row>\n                </ModalBody>\n            </Modal>\n        </>\n    );\n}\n\nexport default HomeHeader;","// DESIGNED AND DEVELOPED BY EKAGRA MIDHA (https://github.com/ekagra25)\n\nimport React, { useState } from 'react';\nimport { Card, CardImg, CardBody, CardTitle, CardText,\n    Label, Button, Row, Col,\n    Modal, ModalHeader, ModalBody,\n    Toast, ToastHeader } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport logo from '../images/wkLogo.jpg';\n\nvar formValues = { email: '', password: '' };\nvar clickOnSignIn = false;\nvar toastVisible = false;\n\nconst required = (val) => val && val.length;\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nfunction Home (props) {\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const toggleModal = () => setModalIsOpen(!modalIsOpen);\n\n    const [show, setShow] = useState(toastVisible);\n    const toggleFalse = () => setShow(false);\n\n    function makeToastVisibleTrue () {\n        toastVisible = true;\n    }\n\n    function makeToastVisibleFalse () {\n        toggleFalse();\n        toastVisible = false;\n    }\n\n    function handleSignIn (values) {\n        makeToastVisibleFalse ();\n        clickOnSignIn = true;\n        props.fetchUsers();\n        formValues.email = values.email;\n        formValues.password = values.password;\n    }\n\n    function handleSignUp (values) {\n        toggleModal();\n        props.signup (values);\n    }\n\n    if (props.users.isLoading) {\n        console.log (\"Loading\");\n        console.log (\"Form Values \" + formValues);\n        \n    }\n\n    else {\n        const validUser = props.users.users.filter ((user) => (user.email === formValues.email) && (user.password === formValues.password))[0];\n        if (validUser) {\n            clickOnSignIn = false;\n            let valuesWithId = { ...formValues, id: validUser.id, name: validUser.name };\n            props.signin (valuesWithId);\n            props.history.push ('/wk/dashboard');\n            props.fetchWarranties();\n        }  \n        else if (formValues.email !== '') {\n            if (clickOnSignIn) {\n                makeToastVisibleTrue();\n                clickOnSignIn = false;\n            }\n        }\n            \n    }\n\n    const loading = () => {\n        if (props.dashboard.isLoading) {\n            return (\n                <div className=\"loadingOverlay\">\n                    <div className=\"loadingSpan\">\n                        <span className=\"fa fa-spinner fa-pulse fa-4x fa-black mb-2\" /> Please Wait\n                    </div>\n                </div>\n            );\n        }\n    }\n\n    if (props.dashboard.signedIn === null) {\n        return (\n            <>\n                {loading()}\n                <main className=\"container d-flex flex-row flex-grow-1\">\n                    <div className=\"row flex-grow-1 align-items-center scrollable scrollbar-hidden\">\n                        <div className=\"col-md-6 mt-3\">\n                            <h1>WarrantyKeeper</h1>\n                            <p id=\"headLine\">Lost the warranty information again? Don't let that happen anymore.\n                                Keep your warranties stored here, and access them anytime, anywhere.\n                            </p>\n                        </div>\n                        <div className=\"col-lg-2 col-md-1\"></div>\n                        <div className=\"col-lg-4 col-md-5 mb-10\">\n                            <Card>\n                                <CardImg top src={logo} width=\"auto\" />\n                                <CardBody>\n                                    <CardTitle>\n                                        <h3>Sign In <span className={(!props.users.isLoading) ? \"\" : \"fa fa-spinner fa-pulse fa-fw fa-primary\"} /></h3>\n                                    </CardTitle>\n                                    <LocalForm onSubmit={(values) => handleSignIn (values)}>\n                                        <Row className=\"form-group\">\n                                            <Col xs={12}>\n                                                <Toast isOpen={show} style={{backgroundColor: \"#ff0000\"}}>\n                                                    <ToastHeader  toggle={() => makeToastVisibleFalse()}>\n                                                        <span className=\"fa fa-exclamation-triangle\" /> Incorrect email address or password.\n                                                    </ToastHeader>\n                                                </Toast>\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"form-group\">\n                                            <Col xs={12}>\n                                                <Control.text model=\".email\" id=\"signInEmail\" name=\"email\"\n                                                    placeholder=\"Email Address\" className=\"form-control\"\n                                                    validators={{ required, validEmail }}\n                                                />\n                                                <Errors className=\"fa fa-exclamation-circle text-danger\" model=\".email\" show=\"touched\"\n                                                    messages={{required: ' Required.', validEmail: ' Enter a valid email address.'}}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"form-group\">\n                                            <Col xs={12}>\n                                                <Control.text type=\"password\" model=\".password\" id=\"signInPasword\" name=\"password\"\n                                                    placeholder=\"Password\" className=\"form-control\"\n                                                    validators={{ required }}\n                                                />\n                                                <Errors className=\"fa fa-exclamation-circle text-danger\" model=\".password\" show=\"touched\"\n                                                    messages={{ required: ' Required.' }}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"form-group\">\n                                            <Col xs={12}>\n                                                <Button type=\"submit\" color=\"primary\" block>\n                                                    <span className=\"fa fa-sign-in\" /> Sign In\n                                                </Button>\n                                            </Col>\n                                        </Row>\n                                    </LocalForm>\n                                    <CardText>\n                                        Don't have an account? <Button color=\"link\" onClick={toggleModal} className=\"m-0 p-0\">Sign Up</Button>\n                                    </CardText>\n                                </CardBody>\n                            </Card>\n                        </div>\n                    </div>\n                </main>\n    \n                <Modal isOpen={modalIsOpen} toggle={toggleModal}>\n                    <ModalHeader toggle={toggleModal}>Create new account</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={(values) => handleSignUp (values)} >\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"name\" md={4}>Name</Label>\n                                <Col md={8}>\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\n                                        placeholder=\"Name\" className=\"form-control\"\n                                        validators={{ required }}\n                                    />\n                                    <Errors className=\"fa fa-exclamation-circle text-danger\" model=\".name\" show=\"touched\"\n                                        messages={{ required: ' Required.' }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={4}>Email Address</Label>\n                                <Col md={8}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email Address\" className=\"form-control\"\n                                        validators={{ required, validEmail }}\n                                    />\n                                    <Errors className=\"fa fa-exclamation-circle text-danger\" model=\".email\" show=\"touched\"\n                                        messages={{ required: ' Required.', validEmail: ' Enter a valid email address.'}}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"password\" md={4}>Password</Label>\n                                <Col md={8}>\n                                    <Control type=\"password\" model=\".password\" id=\"password\" name=\"password\"\n                                        placeholder=\"Password\" className=\"form-control\"\n                                        validators={{ required }}\n                                    />\n                                    <Errors className=\"fa fa-exclamation-circle text-danger\" model=\".password\" show=\"touched\"\n                                        messages={{ required: ' Required.' }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col xs={12}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        <span className=\"fa fa-user-plus\" /> Create Account\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </>\n        );\n    }\n    else {\n        props.history.push ('/wk/dashboard');\n        return (\n            <></>\n        );\n    }\n    \n}\n\nexport default Home;","// DESIGNED AND DEVELOPED BY EKAGRA MIDHA (https://github.com/ekagra25)\n\nimport React, { useState } from 'react';\nimport { Button, Card, CardBody, CardHeader,\n    ListGroup, ListGroupItem, Fade,\n    Table, Row, Col, Label, CardFooter } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validDate = (val) => /^(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[13-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$/.test(val);\n\nfunction BlankCard (props) {\n    if (props.show) {\n        return (\n            <Fade className=\"h-100 w-100\">\n                <Card className=\"h-100 w-100\" id=\"blankCard\">\n                    <CardBody className=\"d-flex align-items-center justify-content-center\">\n                        <p><span className=\"fa fa-info-circle\" /> Click on a warranty name to see details or add new warranty information</p>\n                    </CardBody>\n                </Card>\n            </Fade>\n        );\n    }\n    else {\n        return (\n            <></>\n        );\n    }  \n}\n\n\nfunction WarrantyDetail (warranty) {\n    if (warranty.warranty !== null) {\n        var invoiceDateParts = warranty.warranty.invoiceDate.split(\"/\");\n        var invoiceDateObject = new Date(+invoiceDateParts[2], invoiceDateParts[1] - 1, +invoiceDateParts[0]); \n        var invoiceDate = new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(invoiceDateObject);\n        var warrantyPeriodObject = invoiceDateObject.setMonth( invoiceDateObject.getMonth() + parseInt (warranty.warranty.warrantyPeriod) );\n        var warrantyUpto = new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(warrantyPeriodObject);\n\n        return (\n            <Fade className=\"h-100 w-100\">\n                <Card className=\"h-100 w-100\">\n                    <CardHeader>{warranty.warranty.name}</CardHeader>\n                    <CardBody className=\"scrollable scrollbar-hidden\">\n                        <Table responsive>\n                            <tbody>\n                                <tr>\n                                    <th scope=\"row\">Product Name</th>\n                                    <td>{warranty.warranty.name}</td>\n                                </tr>\n                                <tr>\n                                    <th scope=\"row\">Invoice Number</th>\n                                    <td>{warranty.warranty.invoiceNum}</td>\n                                </tr>\n                                <tr>\n                                    <th scope=\"row\">Purchased on</th>\n                                    <td>{invoiceDate}</td>\n                                </tr>\n                                <tr>\n                                    <th scope=\"row\">Purchased from</th>\n                                    <td>{warranty.warranty.seller}</td>\n                                </tr>\n                                <tr>\n                                    <th scope=\"row\">Warranty Number</th>\n                                    <td>{(warranty.warranty.warrantyNum) ? warranty.warranty.warrantyNum : \"NA\"}</td>\n                                </tr>\n                                <tr>\n                                    <th scope=\"row\">Covered upto</th>\n                                    <td>{warrantyUpto}</td>\n                                </tr>\n                                <tr>\n                                    <th scope=\"row\">Comments</th>\n                                    <td>{(warranty.warranty.comments) ? warranty.warranty.comments : \"NA\"}</td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                    </CardBody>\n                    <CardFooter>\n                        <Row>\n                            <Col xs={12}>\n                                <Button outline color=\"danger\" onClick={() => {\n                                    var sure = window.confirm (\"Are you sure you want to delete the warranty information?\");\n                                    if (sure) warranty.deleteWarranty (warranty.warranty.id)}} block>\n                                    <span className=\"fa fa-trash\" /> Delete\n                                </Button>\n                            </Col>\n                        </Row>\n                    </CardFooter>\n                </Card>\n            </Fade>\n        );\n    }\n    else {\n        return (\n            <></>\n        );\n    } \n}\n\nfunction Dashboard (props) {\n    const [showDetail, setShowDetail] = useState(null);\n    const toggleShowDetail = (warranty) => setShowDetail(warranty);\n    const toggleShowDetailToNull = () => setShowDetail(null);\n\n    const [addWarrantyInfo, setAddWarranty] = useState(false);\n    const toggleAddWarranty = () => setAddWarranty(!addWarrantyInfo);\n    const toggleAddWarrantyToFalse = () => setAddWarranty (false);\n\n    if (props.dashboard.signedIn !== null)\n    {\n        const userId = props.dashboard.signedIn.id;\n        const userWarranties = props.warranties.warranties.filter ((warranty) => warranty.userId === userId);\n        const warrantyList = userWarranties.map ((warranty) => {\n            return (\n                <ListGroupItem key={warranty.id} tag=\"button\" action\n                    onClick={() => { toggleAddWarrantyToFalse(); toggleShowDetail(warranty); }}>\n                        {warranty.name}\n                </ListGroupItem>\n            );\n        });\n\n        if (props.warranties.isLoading) {\n            console.log (\"Warranties Loading\");\n        }\n        else if (props.warranties.errMess) {\n            console.log (\"Error:\" + props.warranties.errMess);\n        }\n\n        return (\n            <main className=\"container d-flex flex-row flex-grow-1\">\n                <div className=\"row flex-grow-1 scrollable scrollbar-hidden\">\n                    <div className=\"col-md-4 p-3\">\n                        <Card className=\"h-100 scrollable scrollbar-hidden\">\n                            <CardHeader>\n                                Your Warranties\n                            </CardHeader>\n                            <CardBody>\n                                <Button color=\"primary\" block className=\"mb-3\"\n                                    onClick={() => { toggleShowDetailToNull(); toggleAddWarranty(); }}>\n                                        <span className=\"fa fa-plus\" /> Add new warranty information\n                                </Button>\n                                <Row className=\"justify-content-center\">\n                                    <span className={(!props.warranties.isLoading) ? \"hideSpinner\" : \"fa fa-spinner fa-pulse fa-3x fa-fw fa-primary\"} />\n                                </Row>\n                                <ListGroup>\n                                    {warrantyList}\n                                </ListGroup>\n                            </CardBody>\n                        </Card>\n                    </div>\n                    <div className=\"col-md-8 flex-column p-3\">\n                        <BlankCard show={!addWarrantyInfo && (showDetail === null)} />\n                        <AddWarranty addWarranty={props.addWarranty} userId={props.dashboard.signedIn.id} show={addWarrantyInfo} />\n                        <WarrantyDetail warranty={showDetail} deleteWarranty={props.deleteWarranty} />\n                    </div>\n                </div>\n            </main> \n        );\n    }\n    else {\n        props.history.push ('/wk/home');\n        return (\n            <></>\n        );\n    }\n    \n    function AddWarranty (props) {\n        const handleAddWarranty = (values) => {\n            const valuesWithUserId = { ...values, userId: props.userId }\n            props.addWarranty(valuesWithUserId);\n        }\n        if (props.show === true) {\n            return (\n                <Fade className=\"h-100 w-100\">\n                <Card className=\"h-100 w-100\">\n                    <CardHeader>Add new warranty information</CardHeader>\n                    <CardBody className=\"scrollable scrollbar-hidden\">\n                    <LocalForm onSubmit={(values) => handleAddWarranty (values)} id=\"addWarrantyForm\">\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"name\" md={4}>Product Name</Label>\n                            <Col md={8}>\n                                <Control.text model=\".name\" id=\"name\" name=\"name\"\n                                    placeholder=\"Product Name\" className=\"form-control\"\n                                    validators={{ required, minLength: minLength(3), maxLength: maxLength(20) }}\n                                />\n                                <Errors className=\"fa fa-exclamation-circle text-danger\" model=\".name\" show=\"touched\"\n                                    messages={{\n                                        required: ' Required.',\n                                        minLength: ' Product Name too short.',\n                                        maxLength: ' Product Name too long.'\n                                    }}\n                                />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"invoiceNum\" md={4}>Invoice Number</Label>\n                            <Col md={8}>\n                                <Control.text model=\".invoiceNum\" id=\"invoiceNum\" name=\"invoiceNum\"\n                                    placeholder=\"Invoice Number\" className=\"form-control\" \n                                    validators={{ required }}\n                                />\n                                <Errors className=\"fa fa-exclamation-circle text-danger\" model=\".invoiceNum\" show=\"touched\"\n                                    messages={{ required: ' Required.' }}\n                                />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"invoiceDate\" md={4}>Purchased on</Label>\n                            <Col md={8}>\n                                <Control type=\"date\" model=\".invoiceDate\" id=\"invoiceDate\" name=\"invoiceDate\"\n                                    placeholder=\"Invoice Date (DD/MM/YYYY)\" className=\"form-control\"\n                                    validators={{ required, validDate }}\n                                />\n                                <Errors className=\"fa fa-exclamation-circle text-danger\" model=\".invoiceDate\" show=\"touched\"\n                                    messages={{ required: ' Required.', validDate: ' Enter a valid date in the format DD/MM/YYYY' }}\n                                />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"seller\" md={4}>Purchased from</Label>\n                            <Col md={8}>\n                                <Control.text model=\".seller\" id=\"seller\" name=\"seller\"\n                                    placeholder=\"Seller\" className=\"form-control\"\n                                    validators={{ required, minLength: minLength(3), maxLength: maxLength(15) }}\n                                />\n                                <Errors className=\"fa fa-exclamation-circle text-danger\" model=\".seller\" show=\"touched\"\n                                    messages={{\n                                        required: ' Required.',\n                                        minLength: ' Seller Name too short.',\n                                        maxLength: ' Seller Name too long.'\n                                    }}\n                                />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"warrantyNum\" md={4}>Warranty Number</Label>\n                            <Col md={8}>\n                                <Control.text model=\".warrantyNum\" id=\"warrantyNum\" name=\"warrantyNum\"\n                                    placeholder=\"Warranty Number (if applicable)\" className=\"form-control\" \n                                />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"warrantyPeriod\" md={4}>Warranty Period</Label>\n                            <Col md={8}>\n                                <Control.text model=\".warrantyPeriod\" id=\"warrantyPeriod\" name=\"warrantyPeriod\"\n                                    placeholder=\"Warranty Period (in months)\" className=\"form-control\"\n                                    validators={{ required, isNumber }}\n                                />\n                                <Errors className=\"fa fa-exclamation-circle text-danger\" model=\".warrantyPeriod\" show=\"touched\"\n                                    messages={{ required: ' Required.', isNumber: ' Enter number of months of warranty period.' }}\n                                />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"comments\" md={4}>Comments</Label>\n                            <Col md={8}>\n                                <Control.textarea rows=\"2\" model=\".comments\" id=\"comments\" name=\"comments\"\n                                    placeholder=\"Additional Information\" className=\"form-control\" \n                                />\n                            </Col>\n                        </Row>\n                    </LocalForm>\n                    </CardBody>\n                    <CardFooter>\n                    <Row>\n                            <Col md={6}>\n                                <Button type=\"submit\" outline color=\"primary\" block form=\"addWarrantyForm\">\n                                    Add\n                                </Button>\n                            </Col>\n                            <Col md={6}>\n                                <Button outline color=\"danger\" block onClick={() => toggleAddWarrantyToFalse()} >\n                                    Cancel\n                                </Button>\n                            </Col>\n                        </Row>\n                    </CardFooter>\n                </Card>\n                </Fade>\n            );\n        }\n        else {\n            return (\n                <></>\n            );\n        }\n    }\n}\n\nexport default Dashboard;","// DESIGNED AND DEVELOPED BY EKAGRA MIDHA (https://github.com/ekagra25)\n\nimport React, { Component } from 'react';\nimport { Button, Row, Col, Label } from 'reactstrap';\nimport { Control, Form, Errors } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n    constructor (props) {\n        super (props);\n\n        this.handleSubmit = this.handleSubmit.bind (this);\n    }\n\n    handleSubmit(values) {\n        this.props.resetFeedbackForm();\n        this.props.postFeedback(values);\n    }\n\n    render() {\n        return (\n            <div className=\"container d-flex flex-column flex-grow-1\">\n                <div className=\"row flex-shrink-0\">\n                    <div className=\"col-12 mt-3\">\n                        <h1>Contact Us</h1>\n                    </div>\n                </div>\n                <div className=\"row flex-grow-1 align-items-center scrollable scrollbar-hidden\">\n                    <div className=\"col-md-3\">\n                        <p>Tell us what you think, or directly connect with us on-</p>\n                        <p style={{fontSize: '150%'}}>\n                            <span className=\"fa fa-github\">{' '}\n                                <a href=\"https://github.com/ekagra25\" target=\"_blank\" rel=\"noopener noreferrer\">ekagra25</a>\n                            </span>\n                        </p>\n                        <p style={{fontSize: '150%'}}>\n                            <span className=\"fa fa-linkedin-square\">{' '}\n                                <a href=\"https://www.linkedin.com/in/ekagra-midha/\" target=\"_blank\" rel=\"noopener noreferrer\">Ekagra Midha</a>\n                            </span>\n                        </p>\n                    </div>\n                    <div className=\"col-md-9\" style={{borderLeft: '2px solid #ffffff'}}>\n                        <div className=\"container\">\n                            <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                                <Row className=\"form-group ml-0\">\n                                    <h4>Tell us what you think...</h4>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"name\" md={3}>Name</Label>\n                                    <Col md={9}>\n                                        <Control.text model=\".name\" id=\"name\" name=\"name\"\n                                            placeholder=\"Name\" className=\"form-control\"\n                                            validators={{ required }}\n                                            />\n                                        <Errors className=\"fa fa-exclamation-circle text-danger\" model=\".name\" show=\"touched\"\n                                            messages={{ required: ' Required.' }}\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"telnum\" md={3}>Contact Number</Label>\n                                    <Col md={9}>\n                                        <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                            placeholder=\"Contact Number\" className=\"form-control\"\n                                            validators={{ required, minLength: minLength(8), maxLength: maxLength(12), isNumber }}\n                                        />\n                                        <Errors className=\"fa fa-exclamation-circle text-danger\" model=\".telnum\" show=\"touched\"\n                                            messages={{\n                                                required: ' Required.',\n                                                minLength: ' Contact Number too short.',\n                                                maxLength: ' Contact Number too long.',\n                                                isNumber: ' Please enter a valid contact number.'\n                                            }}\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"email\" md={3}>Email</Label>\n                                    <Col md={9}>\n                                        <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                            placeholder=\"Email\" className=\"form-control\"\n                                            validators={{ required, validEmail }}\n                                        />\n                                        <Errors className=\"fa fa-exclamation-circle text-danger\" model=\".email\" show=\"touched\"\n                                            messages={{\n                                                required: ' Required.',\n                                                validEmail: ' Please enter a valid email address.'\n                                            }}\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Col md={{size: 9, offset: 3}}>\n                                        <div className=\"form-check\">\n                                            <Label check>\n                                                <Control.checkbox model=\".agree\" name=\"agree\"\n                                                    className=\"form-check-input\"\n                                                    /> {' '}\n                                                    <strong>May we contact you?</strong>\n                                            </Label>\n                                        </div>\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"message\" md={3}>Feedback</Label>\n                                    <Col md={9}>\n                                        <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                            rows=\"3\" placeholder=\"Feedback\"\n                                            className=\"form-control\" />\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group mb-0\">\n                                    <Col md={{size:9, offset: 3}}>\n                                        <Button type=\"submit\" color=\"primary\"> \n                                            Send Feedback\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </Form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","// DESIGNED AND DEVELOPED BY EKAGRA MIDHA (https://github.com/ekagra25)\n\nimport React from 'react';\n\nfunction Footer (props) {\n    return (\n        <footer>\n            <div className=\"container\">\n                <p>© Copyright 2020 WarrantyKeeper</p>\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer;","export const baseURL = 'https://ekagra25.github.io/wk/';","// DESIGNED AND DEVELOPED BY EKAGRA MIDHA (https://github.com/ekagra25)\n\nimport * as ActionTypes from './ActionTypes';\nimport { baseURL } from '../shared/baseURL';\n\nexport const fetchUsers = () => (dispatch) => {\n    dispatch (usersLoading (true));\n\n    return fetch ('https://api.jsonbin.io/b/5f0fde73c58dc34bf5d4541c')\n    .then (response => {\n        if (response.ok) {\n            return response;\n        }\n        else {\n            var error = new Error (response.status + ': ' + response.statusText);\n            error.message = response;\n            throw error;\n        }\n    },\n    error => {\n        throw error;\n    })\n    .then (response => response.json())\n    .then (users => dispatch (loadUsers (users)))\n    .catch (error => { dispatch (usersFailed (error.message)); alert (\"Error- \" + error.message) });\n}\n\nexport const usersLoading = () => ({\n    type: ActionTypes.USERS_LOADING\n})\n\nexport const loadUsers = (users) => ({\n    type: ActionTypes.LOAD_USERS,\n    payload: users\n})\n\nexport const usersFailed = (errMess) => ({\n    type: ActionTypes.USERS_FAILED,\n    payload: errMess\n})\n\nexport const signup = (userDetails) => (dispatch) => {\n\n    const newUser = { ...userDetails };\n\n    return fetch ('https://api.jsonbin.io/b/5f0fde73c58dc34bf5d4541c', {\n        method: 'POST',\n        body: JSON.stringify (newUser),\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n    .then (response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error (response.status + ': ' + response.statusText);\n                error.message = response;\n                throw error;\n            }\n        },\n        error => {\n            throw error;\n    })\n    .then (response => response.json())\n    .then (alert (\"Your account has been created successfully.\"))\n    .catch (error => {alert('Your account could not be created.\\nError- ' + error.message)})\n}\n\nexport const signin = (userDetails) => ({\n    type: ActionTypes.SIGN_IN,\n    payload: userDetails\n})\n\nexport const signout = () => ({\n    type: ActionTypes.SIGN_OUT\n})\n\nexport const fetchWarranties = () => (dispatch) => {\n    dispatch (warrantiesLoading (true));\n\n    return fetch ('https://api.jsonbin.io/b/5f0fe0d5c58dc34bf5d45517')\n    .then (response => {\n        if (response.ok) {\n            return response;\n        }\n        else {\n            var error = new Error (response.status + ': ' + response.statusText);\n            error.message = response;\n            throw error;\n        }\n    },\n    error => {\n        throw error;\n    })\n    .then (response => response.json())\n    .then (warranties => dispatch (loadWarranties (warranties)))\n    .catch (error =>{ dispatch (warrantiesFailed (error.message)); alert (\"Error- \" + error.message) });\n}\n\nexport const warrantiesLoading = () => ({\n    type: ActionTypes.WARRANTIES_LOADING\n})\n\nexport const loadWarranties = (warranties) => ({\n    type: ActionTypes.LOAD_WARRANTIES,\n    payload: warranties\n})\n\nexport const warrantiesFailed = (errMess) => ({\n    type: ActionTypes.WARRANTIES_FAILED,\n    payload: errMess\n})\n\nexport const addWarranty = (warranty) => (dispatch) => {\n    const newWarranty = { ...warranty };\n\n    return fetch ('https://api.jsonbin.io/b/5f0fe0d5c58dc34bf5d45517', {\n        method: 'POST',\n        body: JSON.stringify (newWarranty),\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n    .then (response => {\n        if (response.ok) {\n            return response;\n        }\n        else {\n            var error = new Error (response.status + ': ' + response.statusText);\n            error.message = response;\n            throw error;\n        }\n    },\n    error => {\n        throw error;\n    })\n    .then (response => response.json())\n    .then (alert ('Warranty information added successfully.'))\n    .then (dispatch (fetchWarranties()))\n    .catch (error => { alert('Warranty information could not be added.\\nError: ' + error.message) })\n}\n\nexport const deleteWarranty = (warrantyId) => (dispatch) => {\n    return fetch (baseURL + 'warranties/' + warrantyId, {\n        method: 'DELETE',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n    .then (response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error (response.status + ': ' + response.statusText);\n                error.message = response;\n                throw error;\n            }\n        },\n        error => {\n            throw error;\n    })\n    .then (response => response.json())\n    .then (alert ('Warranty information deleted successfully.'))\n    .then (dispatch (fetchWarranties()))\n    .catch (error => {alert('Your request could not be completed.\\nError- ' + error.message)})\n}\n\nexport const changePassword = (id, name, email, newPassword) => (dispatch) => {\n    return fetch (baseURL + 'users/' + id, {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify ({\n            name: name,\n            email: email,\n            password: newPassword,\n            id: id\n        }),\n        credentials: 'same-origin'\n    })\n    .then (response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error (response.status + ': ' + response.statusText);\n                error.message = response;\n                throw error;\n            }\n        },\n        error => {\n            throw error;\n    })\n    .then (response => response.json())\n    .catch (error => {alert('Your request could not be completed.\\nError- ' + error.message)})\n}\n\nexport const deleteAccount = (userId) => (dispatch) => {\n    return fetch (baseURL + 'users/' + userId, {\n        method: 'DELETE',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n    .then (response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error (response.status + ': ' + response.statusText);\n                error.message = response;\n                throw error;\n            }\n        },\n        error => {\n            throw error;\n    })\n    .then (response => response.json())\n    .then (alert ('Account deleted successfully.'))\n    .then (dispatch (fetchWarranties()))\n    .catch (error => {alert('Your request could not be completed.\\nError- ' + error.message)})\n}\n\nexport const postFeedback = (feedback) => (dispatch) => {\n\n    const newFeedback = { ...feedback };\n    newFeedback.date = new Date().toISOString();\n    \n    return fetch ('https://api.jsonbin.io/b/5f0fe17d91806166284287d2', {\n        method: \"POST\",\n        body: JSON.stringify(newFeedback),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n    .then(response => {\n        if (response.ok) {\n            return response;\n        } \n        else {\n            var error = new Error(+ response.status + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n      .then (response => response.json())\n      .then (() => alert('Thank you for your feedback!'))\n      .catch (error => { alert('Your Feedback could not be submitted\\nError- ' + error.message)});\n}","// DESIGNED AND DEVELOPED BY EKAGRA MIDHA (https://github.com/ekagra25)\n\nexport const USERS_LOADING = 'USERS_LOADING';\nexport const LOAD_USERS = 'LOAD_USERS';\nexport const USERS_FAILED = 'USERS_FAILED';\nexport const SIGN_UP = 'SIGN_UP';\nexport const SIGN_IN = 'SIGN_IN';\nexport const SIGN_OUT = 'SIGN_OUT';\nexport const WARRANTIES_LOADING = 'WARRANTIES_LOADING';\nexport const LOAD_WARRANTIES = 'LOAD_WARRANTIES';\nexport const WARRANTIES_FAILED = 'WARRANTIES_FAILED';","// DESIGNED AND DEVELOPED BY EKAGRA MIDHA (https://github.com/ekagra25)\n\nimport React, { Component } from 'react';\nimport Header from './HeaderComponent';\nimport Home from './HomeComponent';\nimport Dashboard from './DashboardComponent';\nimport Contact from './ContactComponent';\nimport Footer from './FooterComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { actions } from 'react-redux-form';\nimport { signup, signin, fetchUsers, fetchWarranties, addWarranty, deleteWarranty, changePassword, deleteAccount, signout, postFeedback } from '../redux/ActionCreators';\n\n\nconst mapStateToProps = (state) => {\n    return {\n        users: state.users,\n        dashboard: state.dashboard,\n        warranties: state.warranties\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchUsers: () => { dispatch (fetchUsers()) },\n    signin: (userDetails) => dispatch (signin (userDetails)),\n    signout: () => dispatch (signout()),\n    signup: (userDetails) => dispatch (signup (userDetails)),\n    fetchWarranties: () => { dispatch (fetchWarranties()) },\n    addWarranty: (warranty) => { dispatch (addWarranty (warranty)) },\n    deleteWarranty: (warrantyId) => { dispatch (deleteWarranty (warrantyId)) },\n    changePassword: (id, name, email, password) => { dispatch (changePassword (id, name, email, password)) },\n    deleteAccount: (userId) => { dispatch (deleteAccount (userId)) },\n    resetFeedbackForm: () => { dispatch (actions.reset ('feedback')) },\n    postFeedback: (feedback) => { dispatch(postFeedback(feedback)) }\n});\n\nclass Main extends Component {\n\n    render() {\n        const HomePage = ({history}) => {\n            return (\n                <Home\n                    fetchUsers={this.props.fetchUsers}\n                    fetchWarranties={this.props.fetchWarranties}\n                    users={this.props.users}\n                    signin={this.props.signin}\n                    dashboard={this.props.dashboard}\n                    signup={this.props.signup}\n                    history={history}\n                />\n            );\n        }\n\n        const DashboardPage = ({history}) => {\n            return (\n                <Dashboard\n                    fetchWarranties={this.props.fetchWarranties}\n                    dashboard={this.props.dashboard}\n                    warranties={this.props.warranties}\n                    addWarranty={this.props.addWarranty}\n                    deleteWarranty={this.props.deleteWarranty}\n                    history={history}\n                />\n            );\n        }\n\n        if (this.props.dashboard.stateLoaded) {\n            return (\n                <>\n                    <Header dashboard={this.props.dashboard}\n                        signout={this.props.signout}\n                        changePassword={this.props.changePassword}\n                        deleteAccount={this.props.deleteAccount}\n                        warranties={this.props.warranties}\n                        deleteWarranty={this.props.deleteWarranty}\n                    />\n                    <Switch location={this.props.location}>\n                        <Route exact path='/wk/home' component={ HomePage } />\n                        <Route exact path='/wk/dashboard' component={ DashboardPage } />\n                        <Route exact path='/wk/contact' component={() => <Contact postFeedback={this.props.postFeedback} resetFeedbackForm={this.props.resetFeedbackForm} />} />\n                        {(this.props.dashboard.signedIn === null) ? <Redirect to='/wk/home' /> : <Redirect to='/wk/dashboard' />}\n                    </Switch>\n                    <Footer />\n                </>\n            );\n        }\n        else {\n            return(<div className=\"loadingOverlay\">\n            <div className=\"loadingSpan\">\n                <span className=\"fa fa-spinner fa-pulse fa-4x fa-black mb-2\" /> Please Wait\n            </div>\n        </div>);\n        }\n    }\n}\n\nexport default withRouter (connect (mapStateToProps, mapDispatchToProps) (Main));","// DESIGNED AND DEVELOPED BY EKAGRA MIDHA (https://github.com/ekagra25)\n\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport * as storage from 'redux-storage';\nimport createEngine from 'redux-storage-engine-localstorage';\nimport { Users } from './users';\nimport { Dashboard } from './dashboard';\nimport { Warranties } from './warranties';\nimport { createForms } from 'react-redux-form';\nimport { InitialFeedback } from './forms';\nimport thunk from 'redux-thunk';\n\nconst reducer = storage.reducer(combineReducers ({\n    users: Users,\n    dashboard: Dashboard,\n    warranties: Warranties,\n    ...createForms({\n        feedback: InitialFeedback\n    })\n}));\nconst engine = createEngine('my-save-key');\nconst middleware = storage.createMiddleware(engine);\nconst createStoreWithMiddleware = applyMiddleware(thunk, middleware)(createStore);\nconst store = createStoreWithMiddleware(reducer);\n\nconst load = storage.createLoader(engine);\n\nload(store)\n    .then((newState) => console.log('Loaded state:', newState))\n    .catch(() => console.log('Failed to load previous state'));\n\nexport default store;","// DESIGNED AND DEVELOPED BY EKAGRA MIDHA (https://github.com/ekagra25)\n\nimport * as ActionTypes from './ActionTypes';\n\nexport const Users = (state = { isLoading: false, errMess: null, users: [] }, action) => {\n    switch (action.type) {\n        case ActionTypes.USERS_LOADING:\n            return { ...state, isLoading: true };\n\n        case ActionTypes.LOAD_USERS:\n            return { ...state, isLoading: false, users: action.payload };\n\n        case ActionTypes.USERS_FAILED:\n            return { ...state, isLoading: false, errMess: action.payload };\n\n        case ActionTypes.SIGN_OUT:\n            return { ...state, isLoading: false, errMess: null, users: [] }\n\n        case ActionTypes.SIGN_UP:\n            var user = action.payload;\n            return { ...state, users: state.users.concat(user)};\n\n        default:\n            return state;\n    }\n}","// DESIGNED AND DEVELOPED BY EKAGRA MIDHA (https://github.com/ekagra25)\n\nimport * as ActionTypes from './ActionTypes';\nimport { LOAD } from 'redux-storage'\n\nexport const Dashboard = (state = { signedIn: null, signedOut: true, stateLoaded: false }, action) => {\n    switch (action.type) {\n        case ActionTypes.SIGN_IN:\n            return { ...state, signedIn: action.payload, signedOut: false };\n\n        case ActionTypes.SIGN_OUT:\n            return { ...state, signedIn: null, signedOut: true };\n\n        case LOAD:\n            return { ...state, stateLoaded: true };\n\n        default:\n            return state;\n    }\n}","// DESIGNED AND DEVELOPED BY EKAGRA MIDHA (https://github.com/ekagra25)\n\nimport * as ActionTypes from './ActionTypes';\n\nexport const Warranties = (state = { isLoading: false, errMess: null, warranties: [] }, action) => {\n    switch (action.type) {\n        case ActionTypes.WARRANTIES_LOADING:\n            return { ...state, isLoading: true, errMess: null, warranties: [] };\n\n        case ActionTypes.LOAD_WARRANTIES:\n            return { ...state, isLoading: false, errMess: null, warranties: action.payload };\n\n        case ActionTypes.WARRANTIES_FAILED:\n            return { ...state, isLoading: false, errMess: action.payload, warranties: [] };\n\n        case ActionTypes.SIGN_OUT:\n            return { ...state, isLoading: false, errMess: null, warranties: [] };\n\n        default:\n            return state;\n    }\n}","// DESIGNED AND DEVELOPED BY EKAGRA MIDHA (https://github.com/ekagra25)\n\nexport const InitialFeedback = {\n    name: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    message: ''\n};","// DESIGNED AND DEVELOPED BY EKAGRA MIDHA (https://github.com/ekagra25)\n\nimport React from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/configureStore';\n\n//const store = ConfigureStore;\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <BrowserRouter>\n                <Main />\n            </BrowserRouter>\n        </Provider>\n        \n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// DESIGNED AND DEVELOPED BY EKAGRA MIDHA (https://github.com/ekagra25)\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}